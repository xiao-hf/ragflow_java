<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.xiao.domain.User">
    <!--@mbg.generated-->
    <!--@Table `user`-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, username, `password`, nickname, email, avatar, `role`, `status`, last_login_time, 
    last_login_ip, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from `user`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from `user`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xiao.domain.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `user` (username, `password`, nickname, 
      email, avatar, `role`, 
      `status`, last_login_time, last_login_ip, 
      created_at, updated_at)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{lastLoginIp,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xiao.domain.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null and username != ''">
        username,
      </if>
      <if test="password != null and password != ''">
        `password`,
      </if>
      <if test="nickname != null and nickname != ''">
        nickname,
      </if>
      <if test="email != null and email != ''">
        email,
      </if>
      <if test="avatar != null and avatar != ''">
        avatar,
      </if>
      <if test="role != null and role != ''">
        `role`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="lastLoginIp != null and lastLoginIp != ''">
        last_login_ip,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null and username != ''">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null and nickname != ''">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email != ''">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null and avatar != ''">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="role != null and role != ''">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null and lastLoginIp != ''">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiao.domain.User">
    <!--@mbg.generated-->
    update `user`
    <set>
      <if test="username != null and username != ''">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null and nickname != ''">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email != ''">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null and avatar != ''">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="role != null and role != ''">
        `role` = #{role,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null and lastLoginIp != ''">
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiao.domain.User">
    <!--@mbg.generated-->
    update `user`
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      `role` = #{role,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

<!--auto generated by MybatisCodeHelper on 2025-03-13-->
  <select id="selectByUsernameAndPassword" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `user`
        where username=#{username,jdbcType=VARCHAR} and `password`=#{password,jdbcType=VARCHAR}
    </select>

<!--auto generated by MybatisCodeHelper on 2025-03-13-->
  <select id="selectByUsername" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `user`
    where username=#{username,jdbcType=VARCHAR}
  </select>

<!--auto generated by MybatisCodeHelper on 2025-03-13-->
  <select id="selectOneByUsername" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `user`
    where username=#{username,jdbcType=VARCHAR}
  </select>
</mapper>